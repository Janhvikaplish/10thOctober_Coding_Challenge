/*
19. Remove Nth Node From End of List

Given the head of a linked list, remove the nth node from the end of the list and return its head.

Example 1:
Input: head = [1,2,3,4,5], n = 2
Output: [1,2,3,5]
*/

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
   public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode fast = head;
        ListNode slow = head;
        for (int i = 0; i < n - 1; i++) fast = fast.next;
        ListNode slowPrev = slow;
        while (fast.next != null) {
            fast = fast.next;
            slowPrev = slow;
            slow = slow.next;
        }
        if (slow == head) {
            head = slowPrev.next;
        } else {
            slowPrev.next = slow.next;
        }
        return head;
    }
}
